<%=
  component_wrapper(tag: 'turbo-frame') do
    flex_layout(data: { turbo: true }) do |modal_content|
      modal_content.with_row do
        render(WorkPackages::Share::InviteUserFormComponent.new(work_package: @work_package))
      end

      if @shared_principals.none?
        modal_content.with_row(mt: 3) do
          render(Primer::Beta::Blankslate.new(border: true)) do |component|
            component.with_visual_icon(icon: :people, size: :medium)
            component.with_heading(tag: :h2).with_content(I18n.t('work_package.sharing.text_empty_state_header') )
            component.with_description do
              flex_layout do |flex|
                flex.with_row(mb: 2) do
                  render(Primer::Beta::Text.new(color: :subtle)) { I18n.t('work_package.sharing.text_empty_state_description') }
                end
              end
            end
          end
        end
      else
        modal_content.with_row(mt: 3,
                               data: { 'test-selector': 'op-share-wp-active-list',
                                       controller: 'work-packages--share--bulk-selection',
                                       application_target: 'dynamic' }) do
          invited_user_list do |border_box|
            border_box.with_header(color: :subtle, pt: 2, pb: 2, data: { 'test-selector': 'op-share-wp-header' }) do
              grid_layout('op-share-wp-modal-body--header', tag: :div, align_items: :center) do |header_grid|
                header_grid.with_area(:counter, tag: :div) do
                  render(WorkPackages::Share::CounterComponent.new(work_package: @work_package, count: @shared_principals.size))
                end

                header_grid.with_area(:actions,
                                      tag: :div,
                                      data: { 'work-packages--share--bulk-selection-target': 'defaultActions' }) do
                  flex_layout do |header_actions|
                    header_actions.with_column(mr: 2) do
                      render(Primer::Alpha::ActionMenu.new(anchor_align: :end,
                                                           color: :subtle,
                                                           data: { 'test-selector': 'op-share-wp-filter-type' })) do |menu|
                        menu.with_show_button(scheme: :invisible, color: :subtle) do |button|
                          button.with_trailing_action_icon(icon: "triangle-down")
                          I18n.t('work_package.sharing.filter.type')
                        end
                        menu.with_item(label: I18n.t('work_package.sharing.filter.project_member'))
                        menu.with_item(label: I18n.t('work_package.sharing.filter.not_project_member'))
                        menu.with_item(label: I18n.t('work_package.sharing.filter.project_group'))
                        menu.with_item(label: I18n.t('work_package.sharing.filter.not_project_group'))
                      end
                    end

                    header_actions.with_column do
                      render(Primer::Alpha::ActionMenu.new(anchor_align: :end,
                                                           color: :subtle,
                                                           data: { 'test-selector': 'op-share-wp-filter-role' })) do |menu|
                        menu.with_show_button(scheme: :invisible, color: :subtle) do |button|
                          button.with_trailing_action_icon(icon: "triangle-down")
                          I18n.t('work_package.sharing.filter.role')
                        end
                        menu.with_item(label: I18n.t('work_package.sharing.permissions.view'))
                        menu.with_item(label: I18n.t('work_package.sharing.permissions.comment'))
                        menu.with_item(label: I18n.t('work_package.sharing.permissions.edit'))
                      end
                    end
                  end
                end

                header_grid.with_area(:actions,
                                      tag: :div,
                                      hidden: true, # Prevent flicker on initial render
                                      data: { 'work-packages--share--bulk-selection-target': 'bulkActions' }) do
                  if sharing_manageable?
                    concat(
                      render(WorkPackages::Share::BulkPermissionButtonComponent.new(work_package: @work_package))
                    )

                    concat(
                      form_with(url: work_package_shares_bulk_path,
                                method: :delete,
                                data: { 'work-packages--share--bulk-selection-target': 'bulkForm' }) do
                        render(Primer::Beta::Button.new(type: :submit, scheme: :invisible)) { I18n.t('work_package.sharing.remove') }
                      end
                    )
                  end
                end
              end
            end

            @shared_principals.each do |principal|
              render(WorkPackages::Share::ShareRowComponent.new(share: principal, container: border_box))
            end
          end
        end
      end
    end
  end
%>
